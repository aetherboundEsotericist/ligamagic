// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id        Int        @id @default(autoincrement())
  name      String     @unique @db.VarChar(32)
  wishCards WishCard[]
}

model Store {
  id       Int       @id @default(autoincrement())
  name     String    @unique @db.VarChar(32)
  website  String?
  buyCards BuyCard[]
}

model Order {
  id          Int        @id @default(autoincrement())
  orderNumber Int        @unique
  createdAt   DateTime   @updatedAt
  wishCards   WishCard[]
  buyCards    BuyCard[]
}

model WishCard {
  id       Int      @id @default(autoincrement())
  name     String
  edition  String?  @db.Char(5)
  quality  Int      @default(5)
  quantity Int      @default(1)
  person   Person   @relation(fields: [personId], references: [id])
  order    Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  buycard  BuyCard?

  personId Int
  orderId  Int
}

model BuyCard {
  id       Int       @id @default(autoincrement())
  name     String
  edition  String    @db.Char(5)
  quality  Int
  quantity Int
  price    Float
  store    Store     @relation(fields: [storeId], references: [id])
  order    Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  wishcard WishCard? @relation(fields: [wishcardId], references: [id])

  storeId    Int
  orderId    Int
  wishcardId Int? @unique
}
